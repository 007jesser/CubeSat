
import serial

IMU = serial.Serial('/dev/ttyUSB0',57600)

# Define the parts of the IMU Data
orient = roll,pitch,yaw = 0, 1, 2
buffSize = 60
rawYaw = range(buffSize)
driftYaw = 0 								# The current drift value from the low pass filter
currentYaw = range(buffSize)						# The actual value of the yaw from the high pass filter
i = 0									# i is the buffer index
totalDrift = 0
deltaSum = 0

# Define a function to increment and decrement the index
def ind( current, jump ):
	current = current+jump
	if current < 0:
		current += buffSize
	elif current >= buffSize:
		current -= buffSize
	return current


# Give the IMU some time to wake up
for count in range(50): 						# Throw away 50 readings
	currentReading = IMU.readline()

while 1:
	# Get and clean a reading
	currentReading = IMU.readline()
	currentReading = currentReading.strip("RPY#\r\n")		# Strip away the characters we don't need
	orientationString = (currentReading.split(','))			# Split up the roll pitch and yaw of the reading
	# Calculate the low frequency drift
	runningTotal += 0.42				a	
	rawYaw[i] = (			float( orientationString[roll] ) + 180 - runningTotal)	# Since we are using only the yaw, we convert it to a float and store it : range [0,360]	
	if rawYaw[i] < 0:
		rawYaw[i] += 360
	elif rawYaw[i] > 360:
		rawYaw[i] -= 360	
	# Increment the pointer for the next itteration
	i = ind( i, 1 )							# Increment the buffer pointer#
	#print "raw: " + str(rawYaw[i]) + " yaw: " + str(currentYaw[i]) +" totalDrift: " + str(deltaDrift)
	print str(rawYaw[i]) + '\n' 
